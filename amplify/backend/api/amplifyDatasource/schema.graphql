type User
@model
@auth(rules: [{ allow: owner }])
@key(fields: ["email"])
{
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  flights: [Flight!] @connection(keyName: "flightsByDate")
  planes: [Planes!] @connection(keyName: "byName")
}

type Flight
@model
@auth(rules: [{ allow: owner }])
@key(name: "flightsByDate",fields: ["createdAt"],queryField: "flightsByDate")
{
  id: ID!
  plane: Planes @connection
  tachTime: Float
  tachPictures: [Picture]! @connection(keyName: "byName")
  hobbsTime: Float
  hobbsPictures: [Picture]!@connection(keyName: "byName")
  createdAt: String!
}

type Planes
@model
@auth(rules: [{ allow: owner }])
@key(name: "byName",fields: ["name"])
{
  id: ID!
  name: String!
  type: String!
  Model: String!
  hasTach: Boolean!
  Default: Boolean!
}

type Picture
@model
@auth(rules: [{allow: owner}])
@key(name: "byName",fields: ["name"])
{
  id: ID!
  name: String
  owner: String!

  # Reference the S3Object type from a field.
  file: S3Object
}

type S3Object
{
  bucket: String!
  region: String!
  key: String!
}


